192.168.53.221  --primary
192.168.53.222 --secondary
192.168.53.223 --secondary

Öncelikle kurulumdan önce  her üç sunucumuzda host dosyasında sunucu bilgilerimizi giriyoruz 

[root@nazelin-test-01 ~]# vi /etc/hosts   
 
192.168.53.221    nazelin-test-01.Development.com nazelin-test-01
192.168.53.222    nazelin-test-02.Development.com nazelin-test-02
192.168.53.223    nazelin-test-03.Development.com nazelin-test-03

2 - sunucularımız da  MongoDB 4.2 versiyonunu centos 7 üzerine kuruyoruz.

[root@nazelin-test-01 ~]# vi /etc/yum.repos.d/mongodb-org-4.2.repo 
[mongodb-org-4.2]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.2/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-4.2.asc

:wq!

[root@nazelin-test-01 ~]#  yum install -y mongodb-org 
[root@nazelin-test-01 ~]#  yum install -y mongodb-org-4.2.6 mongodb-org-server-4.2.6 mongodb-org-shell-4.2.6 mongodb-org-mongos-4.2.6 mongodb-org-tools-4.2.6
[root@nazelin-test-01 ~]# exclude=mongodb-org,mongodb-org-server,mongodb-org-shell,mongodb-org-mongos,mongodb-org-tools
[root@nazelin-test-01 ~]# mkdir -p /var/lib/mongo
[root@nazelin-test-01 ~]# sudo chown -R mongod:mongod /var/lib/mongo 
[root@nazelin-test-01 ~]# mkdir -p /var/log/mongodb/mongod.log   
[root@nazelin-test-01 ~]# sudo chown -R mongod:mongod /var/log/mongodb/mongod.log 
[root@nazelin-test-01 ~]# sudo systemctl start mongod 
[root@nazelin-test-01 ~]# sudo systemctl daemon-reload 
[root@nazelin-test-01 ~]# sudo systemctl status mongod  


3 - Firewalld ayarlarımızı yapıyoruz tüm sunucularımız da yapıyoruz
yum -y install firewalld --yüklü değilse sunucumuza yüklüyoruz 
systemctl start firewalld
systemctl enable firewalld
firewall-cmd --permanent --add-port=22/tcp
firewall-cmd --permanent --add-port=27017/tcp
firewall-cmd --reload

4-SELinux ayarını  'enforcing' dan  disabled çekiyoruz öncelikle tüm sunucularımızda yapıyoruz  
 
[root@nazelin-test-01 ~]# vim /etc/sysconfig/selinux 

SELINUX=disabled

:wq!
sonrasında sunucuyu reboot ediyoruz selinux ayarlarını algılasın diye 
[root@nazelin-test-01 ~]# reboot  

5- Authentication ayarlarımızı yapıyoruz tüm nodelar için primary node da mongokey oluşturup diğer secondary nodelarımıza scp ile kopyalıyoruz.

[root@nazelin-test-01 ~]# mkdir /etc/mongod.conf.d 
[root@nazelin-test-01 ~]# chown -R mongod: /etc/mongod.conf.d/
[root@nazelin-test-01 ~]# cd /etc/mongod.conf.d/  
[root@nazelin-test-01 ~]# openssl rand -base64 756 > mongokey  
[root@nazelin-test-01 ~]# chmod 400 mongokey        
[root@nazelin-test-01 ~]# scp mongokey root@192.168.53.222:/etc/mongod.conf.d/ 
[root@nazelin-test-01 ~]# scp mongokey root@192.168.53.223:/etc/mongod.conf.d/ 

6- mongod.conf dosyasında aşağıdaki ayarlarımızı yapıyoruz 

[root@nazelin-test-01 ~]# vi /etc/mongod.conf
# network interfaces
net:
  port: 27017 --güvenlik nedeni ile defaulttan farklı değer  yapabilirsiniz 
  bindIp: 0.0.0.0 
security:
  authorization: enabled
  keyFile: "/etc/mongod.conf.d/mongokey"
replication:
  replSetName: myreplica 
  
 :wq!
 

7. mongodb servisimizi başlatıyoruz 
[root@nazelin-test-01 ~]# mongod -f /etc/mongod.conf
sonrasında mongoya bağlanıyoruz ardından admin user oluşturup mongo ile bağlanılabiliriz güvenlik açısından daha iyi olur .
use admin
db.createUser(
   {
     user: "mng",
     pwd: "mng123",
     roles: [
        { role: "read", db: "admin" },
        { role: "readWrite", db: "admin" },
       { role: "dbAdmin", db: "admin" },
        { role: "userAdmin", db: "admin" },
        { role: "clusterAdmin", db: "admin" },
        { role: "readAnyDatabase", db: "admin" },
        { role: "readWriteAnyDatabase", db: "admin" },
        { role: "userAdminAnyDatabase", db: "admin" },
        { role: "dbAdminAnyDatabase", db: "admin" },
     ]
   }
)

user ı oluşturduktan sonra mongo ya admin userımız ile bağlanıp replicalarımızı ekliyoruz 
[root@nazelin-test-01 ~]# mongo nazelin-test-01:27017/admin -u mng -p mng123 --authenticationDatabase admin

sonrasında replicalarımızı ekliyoruz 
rs.initiate(
   {
      _id: " replica",
      version: 1,
      members: [
	     { _id: 0, host : "nazelin-test-01" },
         { _id: 1, host : "nazelin-test-02" },
         { _id: 2, host : "nazelin-test-03" }
      ]
   }
)

myreplica:PRIMARY> rs.printSlaveReplicationInfo()
source: 192.168.53.221:27017
        syncedTo: Thu Jul 30 2020 18:01:16 GMT+0300 (+03)
        0 secs (0 hrs) behind the primary
source: nazelin-test-02:27017
        syncedTo: Thu Jul 30 2020 18:01:16 GMT+0300 (+03)
        0 secs (0 hrs) behind the primary 
		
myreplica:PRIMARY> db.version()
4.2.7

myreplica:PRIMARY> rs.printReplicationInfo()
configured oplog size:   1006.85693359375MB
log length start to end: 4485865secs (1246.07hrs)
oplog first event time:  Mon Jun 08 2020 19:57:37 GMT+0300 (+03)
oplog last event time:   Thu Jul 30 2020 18:02:02 GMT+0300 (+03)
now:                     Thu Jul 30 2020 18:02:07 GMT+0300 (+03)    		


mongod -shutdown --dbpath /var/lib/mongo/   --mongo servisini kapatma 


